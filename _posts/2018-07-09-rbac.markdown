---
layout: post
title:  "RBAC权限认证"
date:   2018-07-09 23:00:00 +0800
categories: 设计
---
RBAC（Role-based access control）即基于角色的权限控制，是权限控制功能常用的设计。
说得通俗一些，就是给角色分配权限，给用户分配角色，一个用户可以是多个角色，一个角色拥有多种权限。这里有三个实体，用户、角色、权限，都是多对多的关系。
### 统一权限管理的思考
1. 权限模块独立
2. 各子系统公用权限模块
3. 考虑到效率，最好使用本地缓存
4. 模块标识
5. 统一管理权限这些都比较好设计，怎么方便管理怎么设计。难点是各个子系统如何获取自己需要的权限信息？
		1. 每次都根据userid，通过rpc接口获取权限。性能较差。
		2. 根据角色缓存权限。将用户的角色id加密后放到cookie中。用户角色变更，以及角色权限变更，都需要及时进行更改，实现难度增加。
		3. 使用redis共享用户权限信息。性能与通过rpc接口调用差不多。
